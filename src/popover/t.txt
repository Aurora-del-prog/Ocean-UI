import { defineComponent, ref, toRefs } from 'vue'
import { PopoverProps, popoverProps } from './popover-type'
import { BasePopover } from '../../base-popover'
import { onClickOutside } from '@vueuse/core'
import '../style/popover.scss'

export default defineComponent({
  name: 'SPopover',
  props: popoverProps,
  emits: ['update:modelValue'],
  setup(props: PopoverProps, { slots }) {
    return () => {
      // 获取属性中关键值
      const { modelValue, title } = toRefs(props)
      // 宿主元素
      const hostRef = ref()

      const target = ref()

      //点击外部区域，关闭tip
      onClickOutside(target, event => {
        modelValue.value = false
      })

      const clickTrigger = () => {
        if (props.trigger.toLocaleLowerCase() === 'click') {
          modelValue.value = !modelValue.value
        }
      }
      const mousedownTrigger = () => {
        if (props.trigger.toLocaleLowerCase() === 'hover') {
          modelValue.value = true
        }
      }
      const mouseupTrigger = () => {
        if (props.trigger.toLocaleLowerCase() === 'hover') {
          modelValue.value = false
        }
      }
      //聚焦触发
      function focusTriggerHandler() {
        if (props.trigger.toLowerCase() == 'focus') {
          modelValue.value = true
        }
      }
      //失焦消失
      function blurTriggerHandler() {
        if (props.trigger.toLowerCase() == 'focus') {
          modelValue.value = false
        }
      }
      return () => (
        <div
          ref="target"
          onMouseenter={mousedownTrigger}
          onMouseleave={mouseupTrigger}
        >
          <div
            ref="hostRef"
            onClick={clickTrigger}
            onMousedown={focusTriggerHandler}
            onMouseup={blurTriggerHandler}
            class="trigger"
          >
            {slots?.reference?.()}
          </div>
          {modelValue.value && (
            <BasePopover class="s-popover" {...props} host={hostRef.value}>
              <h4 class="s-popover__title">{title.value}</h4>
              {slots.default?.()}
            </BasePopover>
          )}
        </div>
      )
    }
  }
})
